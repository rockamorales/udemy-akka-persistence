# akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
# akka.persistence.journal.leveldb.dir = "target/rtjvm/journal"

akka {
  persistence {
    snapshot-store {
        plugin = "akka.persistence.snapshot-store.local"
        local.dir = "target/rtjvm/snapshots"
    }

    journal {
      plugin = "akka.persistence.journal.leveldb"
      leveldb.dir = "target/rtjvm/journal"
    }
  }
  actor {
    allow-java-serialization = on
  }
}

localStores {
    akka {
      persistence {
        snapshot-store {
            plugin = "akka.persistence.snapshot-store.local"
            local.dir = "target/localStores/snapshots"
        }

        journal {
          plugin = "akka.persistence.journal.leveldb"
          leveldb.dir = "target/localStores/journal"
          leveldb.compaction-intervals {
            simple-persistent-actor = 1000
            "*" = 5000
          }
        }
      }
      actor {
        allow-java-serialization = on
      }
    }
}

postgresDemo {
    akka {
        persistence {
            journal {
                plugin = "jdbc-journal"
            }
            snapshot-store{
                plugin = "jdbc-snapshot-store"
            }
        }
    }
    akka-persistence-jdbc {
        shared-databases {
            slick {
                profile = "slick.jdbc.PostgresProfile$"
                db {
                    numThreads = 10
                    driver = "org.postgresql.Driver"
                    url = "jdbc:postgresql://localhost:5432/rtjvm"
                    user = "docker"
                    password = "docker"
                }
            }
        }
    }

    jdbc-journal {
        use-shared-db = "slick"
    }

    jdbc-snapshot-store {
        use-shared-db = "slick"
    }
}

cassandraDemo {
    akka {
        persistence {
            journal {
                plugin = "akka.persistence.cassandra.journal"
            }
            snapshot-store{
                plugin = "akka.persistence.cassandra.snapshot"
            }
            cassandra {
                snapshot {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
                journal {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
            }
        }
    }

    # default values
    # Configuring cassandra for production: check akka-persistence-cassandra repository in github
}

customSerializerDemo {
    akka {
        persistence {
            journal {
                plugin = "akka.persistence.cassandra.journal"
            }
            snapshot-store{
                plugin = "akka.persistence.cassandra.snapshot"
            }
            cassandra {
                snapshot {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
                journal {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
            }
        }
        actor {
            serializers {
                java = "akka.serialization.JavaSerializer"
                rtjvm = "part3_stores_serialization.UserRegistrationSerializer"
            }

            serialization-bindings {
                "part3_stores_serialization.UserRegistered" = rtjvm
            }
        }
    }
}

eventAdapters {
    akka {
        persistence {
            journal {
                plugin = "akka.persistence.cassandra.journal"
            }
            snapshot-store{
                plugin = "akka.persistence.cassandra.snapshot"
            }
            cassandra {
                snapshot {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
                journal {
                    event-adapters {
                        guitar-inventory-enhancer = "part4_practices.EventAdapters$GuitarReadEventAdapter"
                    }

                    event-adapter-bindings {
                        "part4_practices.EventAdapters$GuitarAdded" = guitar-inventory-enhancer
                    }
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
            }
        }
        actor {
            allow-java-serialization = on
        }
    }
}

detachingModels {
    akka {
        persistence {
            journal {
                plugin = "akka.persistence.cassandra.journal"
            }
            snapshot-store{
                plugin = "akka.persistence.cassandra.snapshot"
            }
            cassandra {
                snapshot {
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
                journal {
                    event-adapters {
                        detach-adapter = "part4_practices.ModelAdapter"
                    }

                    event-adapter-bindings {
                        "part4_practices.DomainModel$CouponApplied" = detach-adapter
                        "part4_practices.DataModel$WrittenCouponApplied" = detach-adapter
                        "part4_practices.DataModel$WrittenCouponAppliedV2" = detach-adapter
                    }
                    keyspace-autocreate = true
                    tables-autocreate = true
                }
            }
        }
        actor {
            allow-java-serialization = on
        }
    }
}